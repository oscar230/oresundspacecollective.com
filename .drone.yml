kind: pipeline
type: docker
name: default

platform:
  os: linux
  arch: arm64

trigger:
  branch:
    - main
    - test

steps:

  - name: verify
    image: node:23-bookworm
    commands:
      - npm install -g markdownlint-cli
      - chmod +x ./verify-bash.sh
      - chmod +x ./verify.sh
      - ./verify-bash.sh ./verify.sh
      - ./verify.sh

  # - name: compress-images
  #   image: python:3-alpine
  #   commands:
  #     - pip3 install pillow optimize-images
  #     - optimize-images ./ -jobs 16
  #     - optimize-images ./public/lineup -jobs 16 -mw 500
  #     - optimize-images ./public/workshops -jobs 16 -mw 500

  # - name: remove-exif
  #   image: alpine:3
  #   commands:
  #     - apk update && apk add exiftool
  #     - exiftool -all:all= -r ./ -overwrite_original

  - name: build-and-push
    image: plugins/docker
    settings:
      registry: registry.e012.se
      username:
        from_secret: registry_username
      password:
        from_secret: registry_password
      repo: registry.e012.se/oscar230/oresundspacecollective.com
      tags: "${DRONE_SOURCE_BRANCH}"
      dockerfile: Dockerfile
      force_tag: false
      purge: true

  - name: deploy
    image: alpine:latest
    environment:
      WATCHTOWER_HOST:
        from_secret: watchtower-host
      WATCHTOWER_AUTH_TOKEN:
        from_secret: watchtower-token
    commands:
      - apk add --no-cache curl
      - |
        curl -H "Authorization: Bearer $WATCHTOWER_AUTH_TOKEN" "https://$WATCHTOWER_HOST/v1/update"
    when:
      status:
        - success
